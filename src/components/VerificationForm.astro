<form class="verify-form">
  <div>
    <input type="text" placeholder="your-name" id="username" />
    <label for="username"><strong>@nostr.industries</strong></label>
  </div>

  <div>
    <input type="text" placeholder="your public key in HEX format" id="pubkey" />
    <button id="verify-button" type="button">verify</button>
  </div>
</form>

<div class="verify-result">
  <div id="verify-error"></div>
  <div id="verify-success"></div>
</div>

<section class="users">
  <strong id="user-count">loadingâ€¦</strong>
</section>

<style>
	.verify-form, .verify-result {
		line-height: 1.6;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
    display: grid;
	}

  .verify-form {
    grid-row-gap: 1rem;
    margin: 2rem 0;
  }

  .verify-result {
    grid-row-gap: 0;
    display: none;
    margin: -1rem 0 2rem 0;
  }

  #verify-error {
    color: #ff6666;
  }

  #verify-success {
    color: #388a38;
  }

  .verify-form > div {
    display: grid;
    grid-template-columns: 60% 40%;
    grid-gap: 1ch;
    align-items: center;
  }

	strong {
		color: rgb(var(--accent));
	}

  input[type=text] {
    padding: 0.5rem;
    border-radius: 0.5rem;
    border: 1px solid rgba(var(--accent), 25%);
  }

  button {
    width: calc(100% - 1rem);
    background: var(--accent-gradient);
		background-size: 400%;
		background-position: 0%;
    color: white;
    border: none;
    border-radius: 0.4rem;
    font-weight: bold;
    text-transform: uppercase;
    padding: 0.5rem;
    cursor: pointer;
  }

  section.users {
    display: block;
  }
</style>

<script>
  const response = await fetch('https://nostr.industries/.well-known/nostr.json')
  const data = await response.json()
  const users = data.names
  const userCount = document.getElementById('user-count')

  const result = (document.querySelector('.verify-result') as HTMLElement)
  const error = document.getElementById('verify-error')
  const success = document.getElementById('verify-success')

  function resetForm() {
    if(result) {
      result.style.display = 'none'
    }
    if(error) error.innerHTML = ''
    if(success) success.innerHTML = ''
  }

  if(userCount) {
    userCount.innerHTML = `Total users verified: ${Object.keys(users).length} ðŸŽ‰`
  }

  const button = document.getElementById('verify-button')
  button?.addEventListener('click', () => {
    const username = (document.getElementById('username')  as HTMLInputElement).value ?? ''
    const pubkey = (document.getElementById('pubkey') as HTMLInputElement).value ?? ''

    const hasUsername = username.length > 0
    const hasPubkey = pubkey.length > 0

    resetForm()

    let hasError = false

    if(username) {
      if(error && users[username]) {
        error.innerHTML = 'Sorry, this username is already taken.'
        hasError = true
      }

      if(error && Object.values(users).includes(pubkey)) {
        error.innerHTML = 'Sorry, this pubkey is already taken.'
        hasError = true
      }
    }

    if(!hasError && hasUsername && hasPubkey) {
      const iftttEvent = 'nostr_industries_verify'
      const iftttUrl = `https://maker.ifttt.com/trigger/${iftttEvent}/with/key/dSscp_OKcfnlqc4jitN7yc`
      const dataUrl = iftttUrl + `?value1=${username}&value2=${pubkey}`

      fetch(dataUrl, {
        mode: "no-cors",
      })

      if(success) {
        resetForm()
        success.innerHTML = 'Your request has been submitted.<br />' +
        'Verification is currently a manual process and might take a while.<br />' +
        'It is done when your name & pubkey show up <a href="https://nostr.industries/.well-known/nostr.json" target="_blank">here</a>.<br />' +
        `You can then use <strong>${username}@nostr.industries</strong> as your NIP-05 identifier.`
      }
    }
    else if(error && !(hasUsername && hasPubkey)) {
      error.innerHTML = 'Please enter your desired username and pubkey!'
    }

    if(result) {
      result.style.display = 'grid'
    }
  });
</script>
